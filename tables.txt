create table
  public.friendship (
    friend1 text not null,
    friend2 text not null,
    constraint friendship_pkey primary key (friend1, friend2),
    constraint friendship_friend1_fkey foreign key (friend1) references "user" (username) on update cascade on delete cascade,
    constraint friendship_friend2_fkey foreign key (friend2) references "user" (username) on update cascade on delete cascade
  ) tablespace pg_default;


  create table
  public.pending_request (
    id bigint generated by default as identity not null,
    receiver_user text null default ''::text,
    sender_user text null default ''::text,
    constraint pending_request_pkey primary key (id),
    constraint pending_request_receiver_user_fkey foreign key (receiver_user) references "user" (username),
    constraint pending_request_username_fkey foreign key (receiver_user) references "user" (username)
  ) tablespace pg_default;


  create table
  public.user (
    username text not null,
    password text not null,
    salt text null,
    auth_key text not null,
    constraint user_pkey primary key (username),
    constraint user_auth_key_check check ((length(auth_key) < 512)),
    constraint user_username_check check ((length(username) < 20))
  ) tablespace pg_default;